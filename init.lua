-- example file i.e lua/custom/init.lua

vim.g.mapleader = ','
local o = vim.o
local g = vim.g
local opts = { noremap = true, silent = true}

g.mapleader = ','

--===================================================================
--= Basic settings that need to be done early.
--= ===================================================================
o.compatible = false     -- Eliminate vi backwards-compatability
o.number = true              -- Enable line numbers
o.numberwidth = 4
-- g.filetype plugin on          -- required!
-- g.filetype indent on          -- required!
o.syntax = true
--"
--" Abbreviations (typo corrections)
--"
vim.cmd('cnoreabbrev WQ wq')
vim.cmd('cnoreabbrev Wq wq')
vim.cmd('cnoreabbrev We w')
vim.cmd('cnoreabbrev W  w')
vim.cmd('cnoreabbrev Q  q')
vim.cmd('cnoreabbrev X  x')
--" TODO: This needs to get remapped, or utilisnipped out.
--" This generated by something that I hit with the keyboard, and it
--" causes a previous selected item to get replaced by 'w'.
--"%s/\<2\>/w/g" something



-- vim.cmd(o.map("n", ";", ':%s/<c-r><c-w>//g<left><left>', opts)

-- o.map("n", "<C-a>", '<C-U><C-R>=v:count1<CR>Cycle<CR>', opts)

-- This mapping allows us to press <enter> to search for the current
-- token under the cursor without stepping to the next match (like # or *)
-- and set the highlight.
-- The second incantation does the same thing, except it does not do a word search.
-- Fix the one below for FreeBSD
-- ['<CR>'] = {"<cmd>:let @/='\<<C-R>=expand('<cword>')<CR>\>'<CR>:set hls<CR>", "CR - Search"},
-- ['<CR>'] = {"<cmd> :let @ /= '<C-R>=expand(<cword>)<CR>' ", "CR - Search"},
-- ['<CR>'] = {"<cmd> :let @ /= '<C-R>=expand(<cword>)<CR>'<CR>:set hls<CR>", "CR - Search"},
--:nnoremap <silent><CR>  :let @/='\<<C-R>=expand("<cword>")<CR>\>'<CR>:set hls
-- ['F10']= {"<cmd>:let @/='<C-R>=expand('<cword>')<CR>'<CR>:set hls<CR>", "CR - Search"},
-- ['F10']= {"<cmd> :let @/ = '<C-R>=expand(<cword>)<CR>'<CR>:set hls<CR>", "CR - Search"},
--o.map("n", "<CR>", :let @ = '<C-R>=expand(<cword>)<CR>:set hls<CR>', opts)
-- :noremap <silent><cr>  :let @ /= '<C-R>=expand(<cword>)<CR>'
--o.map("n", "<F10>", :let @/= /<<C-R>="test"<CR>/> ', opts)


vim.cmd[[

noremap ;       :%s/\<<c-r><c-w>\>//g<left><left>
noremap <CR>    :let @/=expand('<cword>')<CR>:set hls<CR>

]]


--" Shortcuts: search/replace
--" A function is for replacing the current-under-cursor word with
--" another pattern/word. Simply, it copies the word under cursor and inserts it
--" into a substitution command call. You only need to type the replacement pattern
--" and press the Enter key to actually replace the text:
--" replace the word under cursor
--" Select 's' to search/replace
--" nmap ; :%s/\<<c-r><c-w>\>/



vim.api.nvim_exec([[ autocmd FileType go setlocal shiftwidth=8 softtabstop=8 expandtab ]], false)
vim.api.nvim_exec([[ autocmd TermOpen * setlocal nonumber norelativenumber ]], false)
vim.api.nvim_exec([[ let $FZF_DEFAULT_COMMAND = 'ag --hidden --ignore .git -l -g ""']], false)
vim.api.nvim_exec([[ set clipboard+=unnamedplus ]], false)
vim.api.nvim_exec([[ set inccommand=nosplit ]], false)
vim.cmd([[ autocmd FileType ruby,elixir,go,rust,clojure autocmd BufWritePre <buffer> %s/\s\+$//e ]])
